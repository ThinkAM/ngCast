{"version":3,"sources":["../../CastVideos.js","../../node_modules/tslib/tslib.es6.js","../../ng-cast.component.ts","../../shared/ng-cast.service.ts","../../ng.cast.module.ts"],"names":["MEDIA_SOURCE_ROOT","ENABLE_ADS","ENABLE_LIVE","PROGRESS_BAR_WIDTH","FULL_VOLUME_HEIGHT","PLAYER_STATE","CastPlayer","this","playerHandler","PlayerHandler","playerState","playerStateBeforeSwitch","remotePlayer","remotePlayerController","currentMediaTime","mediaDuration","timer","incrementMediaTimeHandler","incrementMediaTime","bind","seekMediaListener","seekMedia","currentMediaIndex","mediaContents","fullscreen","mediaInfo","whenSkippable","liveSeekableRange","isLiveContent","setupLocalPlayer","addVideoThumbs","initializeUI","mediaJSON","categories","prototype","initializeCastPlayer","options","receiverApplicationId","autoJoinPolicy","chrome","cast","AutoJoinPolicy","ORIGIN_SCOPED","framework","CastContext","getInstance","setOptions","RemotePlayer","RemotePlayerController","addEventListener","RemotePlayerEventType","IS_CONNECTED_CHANGED","e","switchPlayer","value","stopProgressTimer","resetVolumeSlider","isConnected","pause","setupRemotePlayer","castPlayer","target","setTarget","play","isMediaLoaded","document","getElementById","style","display","load","stop","mediaIndex","prepareToPlay","getMediaDuration","updateDurationDisplay","startProgressTimer","updateDisplay","getCurrentMediaTime","updateCurrentTimeDisplay","setTimeString","element","time","setVolume","volumeSliderPosition","mute","unMute","isMuted","seekTo","live_indicator","removeAdMarkers","localPlayer","onMediaLoadedLocally","playerTarget","src","currentTime","duration","innerHTML","currentTimeString","getMediaTimeString","volume","p","height","marginTop","muted","DEFAULT_VOLUME","showFullscreenButton","enableProgressBar","MEDIA_INFO_CHANGED","event","session","getCurrentSession","media","getMediaSession","streamType","StreamType","LIVE","updateAdMarkers","CAN_SEEK_CHANGED","IS_PAUSED_CHANGED","isPaused","IS_MUTED_CHANGED","VOLUME_LEVEL_CHANGED","newVolume","volumeLevel","IS_PLAYING_BREAK_CHANGED","isPlayingBreak","WHEN_SKIPPABLE_CHANGED","onWhenSkippableChanged","CURRENT_BREAK_CLIP_TIME_CHANGED","onCurrentBreakClipTimeChanged","BREAK_CLIP_ID_CHANGED","onBreakClipIdChanged","LIVE_SEEKABLE_RANGE_CHANGED","console","log","playOrPause","MediaInfo","BUFFERED","metadata","TvShowMediaMetadata","title","subtitle","images","url","request","LoadRequest","breakClips","breakClipsJSON","breaks","breaksJSON","Date","sectionStartAbsoluteTime","startAbsoluteTime","sectionStartTimeInMedia","sectionDuration","item","QueueItem","queueData","QueueData","items","name","autoplay","loadMedia","then","errorCode","getErrorMessage","undefined","castSession","vi","length","mediaTitle","mediaEpisodeTitle","mediaSubtitle","episodeTitle","getCastDevice","friendlyName","Math","abs","getEstimatedTime","end","getClockTimeString","currentVolume","setVolumeLevel","muteOrUnmute","seek","canSeek","opacity","hideFullscreenButton","getSessionState","SessionState","SESSION_RESUMED","selectMedia","currentMediaInfo","marginLeft","width","seekable_window","unseekable_overlay","position","parseInt","offsetX","pi","progress","seekTime","pp","pw","currentTarget","id","mouseEvent","pos","offsetY","clientHeight","setInterval","clearInterval","updateProgressBarByTimer","endPlayback","progressBar","isNaN","floor","seekableMediaPosition","max","seekableWidth","unseekableMediaPosition","start","unseekableWidth","skip","seekable_window_1","unseekable_overlay_1","timestamp","isNegative","hours","minutes","seconds","date","getHours","getMinutes","getSeconds","ampm","slice","contentDuration","i","adBreak","isEmbedded","adPositionToMargin","querySelectorAll","forEach","adMarker","remove","currentBreakClipTime","skipAd","enable","progress_indicator","backgroundImage","cursor","draggable","removeEventListener","requestFullScreen","requestMethod","call","cancelFullScreen","fullscreenChangeHandler","fullscreen_expand","fullscreen_collapse","showMediaControl","media_control","hideMediaControl","context","showVolumeSlider","hideVolumeSlider","defaultVolumeSliderHeight","main_video","noneRadio","onclick","adsRadio","liveRadio","error","checked","ni","newdiv","divIdName","createElement","setAttribute","appendChild","code","ErrorCode","API_NOT_INITIALIZED","description","CANCEL","CHANNEL_ERROR","EXTENSION_MISSING","INVALID_PARAMETER","RECEIVER_UNAVAILABLE","SESSION_ERROR","TIMEOUT","window","isAvailable","__decorate","decorators","key","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","NgCastComponent","ngCastService","ngOnInit","initializeCastApi","castingStatus","getStatus","openSession","discoverDevices","closeSession","Component","selector","template","NgCastService","_this","status","casting","onInitSuccess","onError","err","self","subj","Subject","requestSession","s","setCasting","next","onMediaDiscovered","script","body","globalThis","currentMedia","onMediaError","sessionRequest","SessionRequest","DEFAULT_MEDIA_RECEIVER_APP_ID","apiConfig","ApiConfig","ReceiverAvailability","AVAILABLE","initialize","Injectable","NgCastModule","NgModule","schemas","CUSTOM_ELEMENTS_SCHEMA","imports","CommonModule","exports","providers","declarations"],"mappings":"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","sourcesContent":["'use strict';\n\n/** Cleaner UI for demo purposes. */\nconst DEMO_MODE = false;\n\n/** @const {string} Media source root URL */\nconst MEDIA_SOURCE_ROOT = 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/';\n\n/**\n * Controls if Ads are enabled. Controlled by radio button.\n * @type {boolean}\n */\nlet ENABLE_ADS = false;\n\n/**\n * Controls if Live stream is played. Controlled by radio button.\n * @type {boolean}\n */\nlet ENABLE_LIVE = false;\n\n/**\n * Buffer to decide if the live indicator should be displayed to show that\n * playback is at the playback head.\n * @const {number}\n */\nconst LIVE_INDICATOR_BUFFER = 50;\n\n/**\n * Width of progress bar in pixels.\n * @const {number}\n */\nconst PROGRESS_BAR_WIDTH = 700;\n\n/**\n * Time in milliseconds for minimal progress update.\n * @const {number}\n */\nconst TIMER_STEP = 1000;\n\n/**\n * Cast volume upon initial connection.\n * @const {number}\n */\nconst DEFAULT_VOLUME = 0.5;\n\n/**\n * Height, in pixels, of volume bar.\n * @const {number}\n */\nconst FULL_VOLUME_HEIGHT = 100;\n\n/** @enum {string} Constants of states for media for both local and remote playback */\nconst PLAYER_STATE = {\n  // No media is loaded into the player. For remote playback, maps to\n  // the PlayerState.IDLE state.\n  IDLE: 'IDLE',\n  // Player is in PLAY mode but not actively playing content. For remote\n  // playback, maps to the PlayerState.BUFFERING state.\n  BUFFERING: 'BUFFERING',\n  // The media is loaded but not playing.\n  LOADED: 'LOADED',\n  // The media is playing. For remote playback, maps to the PlayerState.PLAYING state.\n  PLAYING: 'PLAYING',\n  // The media is paused. For remote playback, maps to the PlayerState.PAUSED state.\n  PAUSED: 'PAUSED'\n};\n\n/**\n * Cast player object\n * Main variables:\n *  - PlayerHandler object for handling media playback\n *  - Cast player variables for controlling Cast mode media playback\n *  - Current media variables for transition between Cast and local modes\n *  - Current ad variables for controlling UI based on ad playback\n *  - Current live variables for controlling UI based on ad playback\n * @struct @constructor\n */\nvar CastPlayer = function () {\n  /** @type {PlayerHandler} Delegation proxy for media playback */\n  this.playerHandler = new PlayerHandler(this);\n\n  /** @type {PLAYER_STATE} A state for media playback */\n  this.playerState = PLAYER_STATE.IDLE;\n\n  /**\n   * @type {PLAYER_STATE} Player state before switching between local and\n   * remote playback.\n   */\n  this.playerStateBeforeSwitch = null;\n\n  /* Cast player variables */\n  /** @type {cast.framework.RemotePlayer} */\n  this.remotePlayer = null;\n  /** @type {cast.framework.RemotePlayerController} */\n  this.remotePlayerController = null;\n\n  /* Local+Remote player variables */\n  /** @type {number} A number for current time in seconds. Maintained in media time. */\n  this.currentMediaTime = 0;\n  /**\n   * @type {?number} A number for current duration in seconds. Maintained in media time.\n   * Null if duration should not be shown.\n   */\n  this.mediaDuration = -1;\n\n  /** @type {?number} A timer for tracking progress of media */\n  this.timer = null;\n  /** @type {function()} Listener for handling current time increments */\n  this.incrementMediaTimeHandler = this.incrementMediaTime.bind(this);\n  /** @type {function()} Listener to be added/removed for the seek action */\n  this.seekMediaListener = this.seekMedia.bind(this);\n\n  /* Local player variables */\n  /** @type {number} A number for current media index */\n  this.currentMediaIndex = 0;\n  /** @type {?Object} media contents from JSON */\n  this.mediaContents = null;\n  /** @type {boolean} Fullscreen mode on/off */\n  this.fullscreen = false;\n\n  /* Remote Player variables */\n  /** @type {?chrome.cast.media.MediaInfo} Current mediaInfo */\n  this.mediaInfo = null;\n  /* Ad variables */\n  /**\n   * @type {?number} The time in seconds when the break clip becomes skippable.\n   * 5 means that the end user can skip this break clip after 5 seconds. If\n   * negative or not defined, it means that the current break clip is not skippable.\n   */\n  this.whenSkippable = null;\n\n  /* Live variables */\n  /** @type {?chrome.cast.media.LiveSeekableRange} Seekable range for live content */\n  this.liveSeekableRange = null;\n  /** @type {boolean} Remote player is playing live content. */\n  this.isLiveContent = false;\n\n  this.setupLocalPlayer();\n  this.addVideoThumbs();\n  this.initializeUI();\n\n  this.mediaJSON = {\n    'categories': []\n  };\n};\n\nCastPlayer.prototype.initializeCastPlayer = function () {\n  var options = {};\n\n  // Set the receiver application ID to your own (created in the\n  // Google Cast Developer Console), or optionally\n  // use the chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID\n  options.receiverApplicationId = 'C0868879';\n\n  // Auto join policy can be one of the following three:\n  // ORIGIN_SCOPED - Auto connect from same appId and page origin\n  // TAB_AND_ORIGIN_SCOPED - Auto connect from same appId, page origin, and tab\n  // PAGE_SCOPED - No auto connect\n  options.autoJoinPolicy = chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED;\n\n  cast.framework.CastContext.getInstance().setOptions(options);\n\n  this.remotePlayer = new cast.framework.RemotePlayer();\n  this.remotePlayerController = new cast.framework.RemotePlayerController(this.remotePlayer);\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.IS_CONNECTED_CHANGED,\n    function (e) {\n      this.switchPlayer(e.value);\n    }.bind(this)\n  );\n};\n\n/**\n * Switch between the remote and local players.\n */\nCastPlayer.prototype.switchPlayer = function () {\n  this.playerStateBeforeSwitch = this.playerState;\n\n  this.stopProgressTimer();\n  this.resetVolumeSlider();\n\n  // Session is active\n  if (cast && cast.framework && this.remotePlayer.isConnected) {\n    // Pause local playback\n    this.playerHandler.pause();\n    this.setupRemotePlayer();\n  } else {\n    this.setupLocalPlayer();\n  }\n};\n\n/**\n * PlayerHandler\n *\n * This is a handler through which the application will interact\n * with both the RemotePlayer and LocalPlayer. Combining these two into\n * one interface is one approach to the dual-player nature of a Cast\n * Chrome application. Otherwise, the state of the RemotePlayer can be\n * queried at any time to decide whether to interact with the local\n * or remote players.\n *\n * To set the player used, implement the following methods for a target object\n * and call setTarget(target).\n *\n * Methods to implement:\n *  - play()\n *  - pause()\n *  - stop()\n *  - seekTo(time)\n *  - load(mediaIndex)\n *  - isMediaLoaded(mediaIndex)\n *  - prepareToPlay()\n *  - getMediaDuration()\n *  - getCurrentMediaTime()\n *  - setVolume(volumeSliderPosition)\n *  - mute()\n *  - unMute()\n *  - isMuted()\n *  - updateDisplay()\n *  - updateCurrentTimeDisplay()\n *  - updateDurationDisplay()\n *  - setTimeString(element, time)\n */\nvar PlayerHandler = function (castPlayer) {\n  this.target = {};\n\n  this.setTarget = function (target) {\n    this.target = target;\n  };\n\n  this.play = function () {\n    if (castPlayer.playerState == PLAYER_STATE.IDLE ||\n      !this.target.isMediaLoaded(castPlayer.currentMediaIndex)) {\n      this.load(castPlayer.currentMediaIndex);\n      return;\n    }\n\n    castPlayer.playerState = PLAYER_STATE.PLAYING;\n    this.target.play();\n\n    document.getElementById('play').style.display = 'none';\n    document.getElementById('pause').style.display = 'block';\n  };\n\n  this.pause = function () {\n    this.target.pause();\n    castPlayer.playerState = PLAYER_STATE.PAUSED;\n    document.getElementById('play').style.display = 'block';\n    document.getElementById('pause').style.display = 'none';\n  };\n\n  this.stop = function () {\n    castPlayer.playerState = PLAYER_STATE.IDLE;\n    this.target.stop();\n  };\n\n  this.load = function (mediaIndex = null) {\n    if (!mediaIndex) {\n      mediaIndex = castPlayer.currentMediaIndex;\n    }\n    castPlayer.playerState = PLAYER_STATE.BUFFERING;\n    this.target.load(mediaIndex);\n  };\n\n  /**\n   * Check if media has been loaded on the target player.\n   * @param {number?} mediaIndex The desired media index. If null, verify if\n   *  any media is loaded.\n   */\n  this.isMediaLoaded = function (mediaIndex) {\n    return this.target.isMediaLoaded(mediaIndex);\n  };\n\n  /**\n   * Called after media has been successfully loaded and is ready to start playback.\n   * When local, will start playing the video, start the timer, and update the UI.\n   * When remote, will set the UI to PLAYING and start the timer to update the\n   *   UI based on remote playback.\n   */\n  this.prepareToPlay = function () {\n    castPlayer.mediaDuration = this.getMediaDuration();\n    castPlayer.playerHandler.updateDurationDisplay();\n    castPlayer.playerState = PLAYER_STATE.LOADED;\n\n    this.play();\n    castPlayer.startProgressTimer();\n    this.updateDisplay();\n  };\n\n  this.getCurrentMediaTime = function () {\n    return this.target.getCurrentMediaTime();\n  };\n\n  this.getMediaDuration = function () {\n    return this.target.getMediaDuration();\n  };\n\n  this.updateDisplay = function () {\n    // Update local variables\n    this.currentMediaTime = this.target.getCurrentMediaTime();\n    this.mediaDuration = this.target.getMediaDuration();\n\n    this.target.updateDisplay();\n  };\n\n  this.updateCurrentTimeDisplay = function () {\n    this.target.updateCurrentTimeDisplay();\n  };\n\n  this.updateDurationDisplay = function () {\n    this.target.updateDurationDisplay();\n  };\n\n  /**\n   * Determines the correct time string (media or clock) and sets it for the given element.\n   */\n  this.setTimeString = function (element, time) {\n    this.target.setTimeString(element, time);\n  };\n\n  this.setVolume = function (volumeSliderPosition) {\n    this.target.setVolume(volumeSliderPosition);\n  };\n\n  this.mute = function () {\n    this.target.mute();\n    document.getElementById('audio_on').style.display = 'none';\n    document.getElementById('audio_off').style.display = 'block';\n  };\n\n  this.unMute = function () {\n    this.target.unMute();\n    document.getElementById('audio_on').style.display = 'block';\n    document.getElementById('audio_off').style.display = 'none';\n  };\n\n  this.isMuted = function () {\n    return this.target.isMuted();\n  };\n\n  this.seekTo = function (time) {\n    this.target.seekTo(time);\n  };\n};\n\n/**\n * Set the PlayerHandler target to use the video-element player\n */\nCastPlayer.prototype.setupLocalPlayer = function () {\n  // Cleanup remote player UI\n  let live_indicator = document.getElementById('live_indicator');\n  if (live_indicator && live_indicator.style && live_indicator.style.display) {\n    live_indicator.style.display = 'none';\n  }\n\n  this.removeAdMarkers();\n  document.getElementById('skip').style.display = 'none';\n\n  var localPlayer = document.getElementById('video_element');\n  if (typeof localPlayer !== 'undefined' && localPlayer)\n    localPlayer.addEventListener(\n      'loadeddata', this.onMediaLoadedLocally.bind(this));\n\n  // This object will implement PlayerHandler callbacks with localPlayer\n  var playerTarget = {};\n\n  playerTarget.play = function () {\n    localPlayer.play();\n\n    var vi = document.getElementById('video_image');\n    vi.style.display = 'none';\n    localPlayer.style.display = 'block';\n  };\n\n  playerTarget.pause = function () {\n    localPlayer.pause();\n  };\n\n  playerTarget.stop = function () {\n    localPlayer.stop();\n  };\n\n  playerTarget.load = function (mediaIndex) {\n    localPlayer.src = this.mediaContents[mediaIndex]['sources'][0];\n    localPlayer.load();\n  }.bind(this);\n\n  playerTarget.isMediaLoaded = function (mediaIndex) {\n    if (!mediaIndex) {\n      return (localPlayer.src !== null && localPlayer.src !== \"\");\n    } else {\n      return (localPlayer.src == this.mediaContents[mediaIndex]['sources'][0]);\n    }\n  }.bind(this);\n\n  playerTarget.getCurrentMediaTime = function () {\n    return localPlayer.currentTime;\n  };\n\n  playerTarget.getMediaDuration = function () {\n    return localPlayer.duration;\n  };\n\n  playerTarget.updateDisplay = function () {\n    // playerstate view\n    document.getElementById('playerstate').style.display = 'none';\n    document.getElementById('playerstatebg').style.display = 'none';\n    document.getElementById('video_image_overlay').style.display = 'none';\n\n    // media_info view\n    document.getElementById('media_title').innerHTML =\n      castPlayer.mediaContents[castPlayer.currentMediaIndex]['title'];\n    document.getElementById('media_subtitle').innerHTML =\n      castPlayer.mediaContents[castPlayer.currentMediaIndex]['subtitle'];\n  };\n\n  playerTarget.updateCurrentTimeDisplay = function () {\n    // Increment for local playback\n    this.currentMediaTime += 1;\n    this.playerHandler.setTimeString(document.getElementById('currentTime'), this.currentMediaTime);\n  }.bind(this);\n\n  playerTarget.updateDurationDisplay = function () {\n    this.playerHandler.setTimeString(document.getElementById('duration'), this.mediaDuration);\n  }.bind(this);\n\n  playerTarget.setTimeString = function (element, time) {\n    let currentTimeString = this.getMediaTimeString(time);\n    if (currentTimeString !== null) {\n      element.style.display = '';\n      element.innerHTML = currentTimeString;\n    } else {\n      element.style.display = 'none';\n    }\n  }.bind(this);\n\n  playerTarget.setVolume = function (volumeSliderPosition) {\n    if (localPlayer) {\n      localPlayer.volume = volumeSliderPosition < FULL_VOLUME_HEIGHT ?\n        volumeSliderPosition / FULL_VOLUME_HEIGHT : 1;\n    }\n\n    var p = document.getElementById('audio_bg_level');\n    if (typeof p !== 'undefined' && p) {\n      p.style.height = volumeSliderPosition + 'px';\n      p.style.marginTop = -volumeSliderPosition + 'px';\n    }\n  };\n\n  playerTarget.mute = function () {\n    localPlayer.muted = true;\n  };\n\n  playerTarget.unMute = function () {\n    localPlayer.muted = false;\n  };\n\n  playerTarget.isMuted = function () {\n    if (localPlayer)\n      return localPlayer.muted;\n  };\n\n  playerTarget.seekTo = function (time) {\n    localPlayer.currentTime = time;\n  };\n\n  this.playerHandler.setTarget(playerTarget);\n\n  this.playerHandler.setVolume(DEFAULT_VOLUME * FULL_VOLUME_HEIGHT);\n\n  this.showFullscreenButton();\n\n  this.enableProgressBar(true);\n\n  if (this.currentMediaTime > 0) {\n    this.playerHandler.load();\n    this.playerHandler.play();\n  }\n};\n\n/**\n * Set the PlayerHandler target to use the remote player\n * Add event listeners for player changes which may occur outside sender app.\n */\nCastPlayer.prototype.setupRemotePlayer = function () {\n  // Triggers when the media info or the player state changes\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.MEDIA_INFO_CHANGED,\n    function (event) {\n      let session = cast.framework.CastContext.getInstance().getCurrentSession();\n      if (!session) {\n        this.mediaInfo = null;\n        this.isLiveContent = false;\n        this.playerHandler.updateDisplay();\n        return;\n      }\n\n      let media = session.getMediaSession();\n      if (!media) {\n        this.mediaInfo = null;\n        this.isLiveContent = false;\n        this.playerHandler.updateDisplay();\n        return;\n      }\n\n      this.mediaInfo = media.media;\n\n      if (this.mediaInfo) {\n        this.isLiveContent = (this.mediaInfo.streamType ==\n          chrome.cast.media.StreamType.LIVE);\n      } else {\n        this.isLiveContent = false;\n      }\n\n      if (media.playerState == PLAYER_STATE.PLAYING && this.playerState !== PLAYER_STATE.PLAYING) {\n        this.playerHandler.prepareToPlay();\n      }\n\n      this.removeAdMarkers();\n      this.updateAdMarkers();\n\n      this.playerHandler.updateDisplay();\n    }.bind(this)\n  );\n\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.CAN_SEEK_CHANGED,\n    function (event) {\n      this.enableProgressBar(event.value);\n    }.bind(this)\n  );\n\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.IS_PAUSED_CHANGED,\n    function () {\n      if (this.remotePlayer.isPaused) {\n        this.playerHandler.pause();\n      } else if (this.playerState !== PLAYER_STATE.PLAYING) {\n        // If currently not playing, start to play.\n        // This occurs if starting to play from local, but this check is\n        // required if the state is changed remotely.\n        this.playerHandler.play();\n      }\n    }.bind(this)\n  );\n\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.IS_MUTED_CHANGED,\n    function () {\n      if (this.remotePlayer.isMuted) {\n        this.playerHandler.mute();\n      } else {\n        this.playerHandler.unMute();\n      }\n    }.bind(this)\n  );\n\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.VOLUME_LEVEL_CHANGED,\n    function () {\n      var newVolume = this.remotePlayer.volumeLevel * FULL_VOLUME_HEIGHT;\n      var p = document.getElementById('audio_bg_level');\n      p.style.height = newVolume + 'px';\n      p.style.marginTop = -newVolume + 'px';\n    }.bind(this)\n  );\n\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.IS_PLAYING_BREAK_CHANGED,\n    function (event) {\n      this.isPlayingBreak(event.value);\n    }.bind(this)\n  );\n\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.WHEN_SKIPPABLE_CHANGED,\n    function (event) {\n      this.onWhenSkippableChanged(event.value);\n    }.bind(this)\n  );\n\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.CURRENT_BREAK_CLIP_TIME_CHANGED,\n    function (event) {\n      this.onCurrentBreakClipTimeChanged(event.value);\n    }.bind(this)\n  );\n\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.BREAK_CLIP_ID_CHANGED,\n    function (event) {\n      this.onBreakClipIdChanged(event.value);\n    }.bind(this)\n  );\n\n  this.remotePlayerController.addEventListener(\n    cast.framework.RemotePlayerEventType.LIVE_SEEKABLE_RANGE_CHANGED,\n    function (event) {\n      console.log('LIVE_SEEKABLE_RANGE_CHANGED');\n      this.liveSeekableRange = event.value;\n    }.bind(this)\n  );\n\n  // This object will implement PlayerHandler callbacks with\n  // remotePlayerController, and makes necessary UI updates specific\n  // to remote playback.\n  var playerTarget = {};\n\n  playerTarget.play = function () {\n    if (this.remotePlayer.isPaused) {\n      this.remotePlayerController.playOrPause();\n    }\n\n    var vi = document.getElementById('video_image');\n    vi.style.display = '';\n    var localPlayer = document.getElementById('video_element');\n    localPlayer.style.display = 'none';\n  }.bind(this);\n\n  playerTarget.pause = function () {\n    if (!this.remotePlayer.isPaused) {\n      this.remotePlayerController.playOrPause();\n    }\n  }.bind(this);\n\n  playerTarget.stop = function () {\n    this.remotePlayerController.stop();\n  }.bind(this);\n\n  // Load request for local -> remote\n  playerTarget.load = function (mediaIndex) {\n    console.log('Loading...' + this.mediaContents[mediaIndex]['title']);\n\n    let mediaInfo = new chrome.cast.media.MediaInfo(this.mediaContents[mediaIndex]['sources'][0], 'video/mp4');\n    mediaInfo.streamType = chrome.cast.media.StreamType.BUFFERED;\n    mediaInfo.metadata = new chrome.cast.media.TvShowMediaMetadata();\n    mediaInfo.metadata.title = this.mediaContents[mediaIndex]['title'];\n    mediaInfo.metadata.subtitle = this.mediaContents[mediaIndex]['subtitle'];\n    mediaInfo.metadata.images = [{\n      'url': MEDIA_SOURCE_ROOT + this.mediaContents[mediaIndex]['thumb']\n    }];\n\n    let request = new chrome.cast.media.LoadRequest(mediaInfo);\n    request.currentTime = this.currentMediaTime;\n\n    if (ENABLE_ADS) {\n      // Add sample breaks and breakClips.\n      mediaInfo.breakClips = breakClipsJSON;\n      mediaInfo.breaks = breaksJSON;\n    } else if (ENABLE_LIVE) {\n      // Change the streamType and add live specific metadata.\n      mediaInfo.streamType = chrome.cast.media.StreamType.LIVE;\n      // TODO: Set the metadata on the receiver side in your implementation.\n      // startAbsoluteTime and sectionStartTimeInMedia will be set for you.\n      // See https://developers.google.com/cast/docs/caf_receiver/live.\n\n      // TODO: Start time, is a fake timestamp. Use correct values for your implementation.\n      let currentTime = new Date();\n      // Convert from milliseconds to seconds.\n      currentTime = currentTime / 1000;\n      let sectionStartAbsoluteTime = currentTime;\n\n      // Duration should be -1 for live streams.\n      mediaInfo.duration = -1;\n      // TODO: Set on the receiver for your implementation.\n      mediaInfo.startAbsoluteTime = currentTime;\n      mediaInfo.metadata.sectionStartAbsoluteTime = sectionStartAbsoluteTime;\n      // TODO: Set on the receiver for your implementation.\n      mediaInfo.metadata.sectionStartTimeInMedia = 0;\n      mediaInfo.metadata.sectionDuration = this.mediaContents[mediaIndex]['duration'];\n\n      let item = new chrome.cast.media.QueueItem(mediaInfo);\n      request.queueData = new chrome.cast.media.QueueData();\n      request.queueData.items = [item];\n      request.queueData.name = \"Sample Queue for Live\";\n    }\n\n    // Do not immediately start playing if the player was previously PAUSED.\n    if (!this.playerStateBeforeSwitch || this.playerStateBeforeSwitch == PLAYER_STATE.PAUSED) {\n      request.autoplay = false;\n    } else {\n      request.autoplay = true;\n    }\n\n    cast.framework.CastContext.getInstance().getCurrentSession().loadMedia(request).then(\n      function () {\n        console.log('Remote media loaded');\n      }.bind(this),\n      function (errorCode) {\n        this.playerState = PLAYER_STATE.IDLE;\n        console.log('Remote media load error: ' +\n          CastPlayer.getErrorMessage(errorCode));\n        this.playerHandler.updateDisplay();\n      }.bind(this));\n  }.bind(this);\n\n  playerTarget.isMediaLoaded = function (mediaIndex) {\n    let session = cast.framework.CastContext.getInstance().getCurrentSession();\n    if (!session) return false;\n\n    let media = session.getMediaSession();\n    if (!media) return false;\n\n    if (media.playerState == PLAYER_STATE.IDLE) {\n      return false;\n    }\n\n    // No need to verify local mediaIndex content.\n    return true;\n  }.bind(this);\n\n  /**\n   * @return {number?} Current media time for the content. Always returns\n   *      media time even if in clock time (conversion done when displaying).\n   */\n  playerTarget.getCurrentMediaTime = function () {\n    if (this.isLiveContent && this.mediaInfo.metadata &&\n      this.mediaInfo.metadata.sectionStartTimeInMedia) {\n      return this.remotePlayer.currentTime - this.mediaInfo.metadata.sectionStartTimeInMedia;\n    } else {\n      // VOD and live scenerios where live metadata is not provided.\n      return this.remotePlayer.currentTime;\n    }\n  }.bind(this);\n\n  /**\n   * @return {number?} media time duration for the content. Always returns\n   *      media time even if in clock time (conversion done when displaying).\n   */\n  playerTarget.getMediaDuration = function () {\n    if (this.isLiveContent) {\n      // Scenerios when live metadata is not provided.\n      if (this.mediaInfo.metadata == undefined ||\n        this.mediaInfo.metadata.sectionDuration == undefined ||\n        this.mediaInfo.metadata.sectionStartTimeInMedia == undefined) {\n        return null;\n      }\n\n      return this.mediaInfo.metadata.sectionDuration;\n    } else {\n      return this.remotePlayer.duration;\n    }\n  }.bind(this);\n\n  playerTarget.updateDisplay = function () {\n    let castSession = cast.framework.CastContext.getInstance().getCurrentSession();\n    if (castSession && castSession.getMediaSession() && castSession.getMediaSession().media) {\n      let media = castSession.getMediaSession();\n      let mediaInfo = media.media;\n\n      // image placeholder for video view\n      var vi = document.getElementById('video_image');\n      if (mediaInfo.metadata && mediaInfo.metadata.images &&\n        mediaInfo.metadata.images.length > 0) {\n        vi.src = mediaInfo.metadata.images[0].url;\n      }\n\n      // playerstate view\n      document.getElementById('playerstate').style.display = 'block';\n      document.getElementById('playerstatebg').style.display = 'block';\n      document.getElementById('video_image_overlay').style.display = 'block';\n\n      let mediaTitle = '';\n      let mediaEpisodeTitle = '';\n      let mediaSubtitle = '';\n\n      if (mediaInfo.metadata) {\n        mediaTitle = mediaInfo.metadata.title;\n        mediaEpisodeTitle = mediaInfo.metadata.episodeTitle;\n        // Append episode title if present\n        mediaTitle = mediaEpisodeTitle ? mediaTitle + ': ' + mediaEpisodeTitle : mediaTitle;\n        // Do not display mediaTitle if not defined.\n        mediaTitle = (mediaTitle) ? mediaTitle + ' ' : '';\n        mediaSubtitle = mediaInfo.metadata.subtitle;\n        mediaSubtitle = (mediaSubtitle) ? mediaSubtitle + ' ' : '';\n      }\n\n      if (DEMO_MODE) {\n        document.getElementById('playerstate').innerHTML =\n          (ENABLE_LIVE ? 'Live Content ' : 'Sample Video ') + media.playerState + ' on Chromecast';\n\n        // media_info view\n        document.getElementById('media_title').innerHTML = (ENABLE_LIVE ? 'Live Content' : 'Sample Video');\n        document.getElementById('media_subtitle').innerHTML = '';\n      } else {\n        document.getElementById('playerstate').innerHTML =\n          mediaTitle + media.playerState + ' on ' +\n          castSession.getCastDevice().friendlyName;\n\n        // media_info view\n        document.getElementById('media_title').innerHTML = mediaTitle;\n        document.getElementById('media_subtitle').innerHTML = mediaSubtitle;\n      }\n\n      // live information\n      if (mediaInfo.streamType == chrome.cast.media.StreamType.LIVE) {\n        this.liveSeekableRange = media.liveSeekableRange;\n\n        let live_indicator = document.getElementById('live_indicator');\n        live_indicator.style.display = 'block';\n\n        // Display indicator if current time is close to the end of\n        // the seekable range.\n        if (this.liveSeekableRange && (Math.abs(media.getEstimatedTime() - this.liveSeekableRange.end) < LIVE_INDICATOR_BUFFER)) {\n          live_indicator.src = \"imagefiles/live_indicator_active.png\";\n        } else {\n          live_indicator.src = \"imagefiles/live_indicator_inactive.png\";\n        }\n      } else {\n        document.getElementById('live_indicator').style.display = 'none';\n      }\n    } else {\n      // playerstate view\n      document.getElementById('playerstate').style.display = 'none';\n      document.getElementById('playerstatebg').style.display = 'none';\n      document.getElementById('video_image_overlay').style.display = 'none';\n\n      // media_info view\n      document.getElementById('media_title').innerHTML = \"\";\n      document.getElementById('media_subtitle').innerHTML = \"\";\n    }\n  }.bind(this);\n\n  playerTarget.updateCurrentTimeDisplay = function () {\n    this.playerHandler.setTimeString(document.getElementById('currentTime'), this.playerHandler.getCurrentMediaTime());\n  }.bind(this);\n\n  playerTarget.updateDurationDisplay = function () {\n    this.playerHandler.setTimeString(document.getElementById('duration'), this.playerHandler.getMediaDuration());\n  }.bind(this);\n\n  playerTarget.setTimeString = function (element, time) {\n    let currentTimeString = this.getMediaTimeString(time);\n\n    if (this.isLiveContent) {\n      if (currentTimeString == null) {\n        element.style.display = 'none';\n        return;\n      }\n\n      // clock time\n      if (this.mediaInfo.metadata && this.mediaInfo.metadata.sectionStartAbsoluteTime !== undefined) {\n        element.style.display = 'flex';\n        element.innerHTML = this.getClockTimeString(time + this.mediaInfo.metadata.sectionStartAbsoluteTime);\n      } else {\n        // media time\n        element.style.display = 'flex';\n        element.innerHTML = currentTimeString;\n      }\n    } else {\n      if (currentTimeString !== null) {\n        element.style.display = 'flex';\n        element.innerHTML = currentTimeString;\n      } else {\n        element.style.display = 'none';\n      }\n    }\n  }.bind(this);\n\n  playerTarget.setVolume = function (volumeSliderPosition) {\n    var currentVolume = this.remotePlayer.volumeLevel;\n    var p = document.getElementById('audio_bg_level');\n    if (volumeSliderPosition < FULL_VOLUME_HEIGHT) {\n      p.style.height = volumeSliderPosition + 'px';\n      p.style.marginTop = -volumeSliderPosition + 'px';\n      currentVolume = volumeSliderPosition / FULL_VOLUME_HEIGHT;\n    } else {\n      currentVolume = 1;\n    }\n    this.remotePlayer.volumeLevel = currentVolume;\n    this.remotePlayerController.setVolumeLevel();\n  }.bind(this);\n\n  playerTarget.mute = function () {\n    if (!this.remotePlayer.isMuted) {\n      this.remotePlayerController.muteOrUnmute();\n    }\n  }.bind(this);\n\n  playerTarget.unMute = function () {\n    if (this.remotePlayer.isMuted) {\n      this.remotePlayerController.muteOrUnmute();\n    }\n  }.bind(this);\n\n  playerTarget.isMuted = function () {\n    return this.remotePlayer.isMuted;\n  }.bind(this);\n\n  playerTarget.seekTo = function (time) {\n    this.remotePlayer.currentTime = time;\n    this.remotePlayerController.seek();\n  }.bind(this);\n\n  this.playerHandler.setTarget(playerTarget);\n\n  // Setup remote player properties on setup\n  if (this.remotePlayer.isMuted) {\n    this.playerHandler.mute();\n  }\n  this.enableProgressBar(this.remotePlayer.canSeek);\n  // The remote player may have had a volume set from previous playback\n  var currentVolume = this.remotePlayer.volumeLevel * FULL_VOLUME_HEIGHT;\n  var p = document.getElementById('audio_bg_level');\n  p.style.height = currentVolume + 'px';\n  p.style.marginTop = -currentVolume + 'px';\n\n  // Show media_control\n  document.getElementById('media_control').style.opacity = 0.7;\n\n  this.hideFullscreenButton();\n\n  // If resuming a session, take the remote properties and continue the existing\n  // playback. Otherwise, load local content.\n  if (cast.framework.CastContext.getInstance().getCurrentSession().getSessionState() ==\n    cast.framework.SessionState.SESSION_RESUMED) {\n    console.log('Resuming session');\n    this.playerHandler.prepareToPlay();\n\n    // New media has been loaded so the previous ad markers should\n    // be removed.\n    this.removeAdMarkers();\n    this.updateAdMarkers();\n  } else {\n    this.playerHandler.load();\n  }\n};\n\n/**\n * Callback when media is loaded in local player\n */\nCastPlayer.prototype.onMediaLoadedLocally = function () {\n  var localPlayer = document.getElementById('video_element');\n  localPlayer.currentTime = this.currentMediaTime;\n\n  this.playerHandler.prepareToPlay();\n};\n\n/**\n * Select a media content\n * @param {number} mediaIndex A number for media index\n */\nCastPlayer.prototype.selectMedia = function (mediaIndex) {\n  console.log('Media index selected: ' + mediaIndex);\n\n  this.currentMediaIndex = mediaIndex;\n  // Clear currentMediaInfo when playing content from the sender.\n  this.playerHandler.currentMediaInfo = undefined;\n\n  // Set video image\n  var vi = document.getElementById('video_image');\n  vi.src = MEDIA_SOURCE_ROOT + this.mediaContents[mediaIndex]['thumb'];\n\n  // Reset progress bar\n  var pi = document.getElementById('progress_indicator');\n  pi.style.marginLeft = '0px';\n  var progress = document.getElementById('progress');\n  progress.style.width = '0px';\n\n  let seekable_window = document.getElementById('seekable_window');\n  let unseekable_overlay = document.getElementById('unseekable_overlay');\n  seekable_window.style.width = PROGRESS_BAR_WIDTH;\n  unseekable_overlay.style.width = '0px';\n\n  // Stop timer and reset time displays\n  this.stopProgressTimer();\n  this.currentMediaTime = 0;\n  this.playerHandler.setTimeString(document.getElementById('currentTime'), 0);\n  this.playerHandler.setTimeString(document.getElementById('duration'), 0);\n\n  this.playerState = PLAYER_STATE.IDLE;\n  this.playerHandler.play();\n};\n\n/**\n * Media seek function\n * @param {Event} event An event object from seek\n */\nCastPlayer.prototype.seekMedia = function (event) {\n  if (this.mediaDuration == null || (cast.framework.CastContext.getInstance().getCurrentSession() && !this.remotePlayer.canSeek)) {\n    console.log('Error - Not seekable');\n    return;\n  }\n\n  if (this.isLiveContent && !this.liveSeekableRange) {\n    console.log('Live content has no seekable range.')\n    return;\n  }\n\n  var position = parseInt(event.offsetX, 10);\n  var pi = document.getElementById('progress_indicator');\n  var progress = document.getElementById('progress');\n  let seekTime = 0;\n  let pp = 0;\n  let pw = 0;\n  if (event.currentTarget.id == 'progress_indicator') {\n    seekTime = parseInt(this.currentMediaTime + this.mediaDuration * position /\n      PROGRESS_BAR_WIDTH, 10);\n    pp = parseInt(pi.style.marginLeft, 10) + position;\n    pw = parseInt(progress.style.width, 10) + position;\n  } else {\n    seekTime = parseInt(position * this.mediaDuration / PROGRESS_BAR_WIDTH, 10);\n    pp = position;\n    pw = position;\n  }\n\n  if (this.playerState === PLAYER_STATE.PLAYING ||\n    this.playerState === PLAYER_STATE.PAUSED) {\n    this.currentMediaTime = seekTime;\n    progress.style.width = pw + 'px';\n    pi.style.marginLeft = pp + 'px';\n  }\n\n  if (this.isLiveContent) {\n    seekTime += this.mediaInfo.metadata.sectionStartTimeInMedia;\n  }\n\n  this.playerHandler.seekTo(seekTime);\n};\n\n/**\n * Set current player volume\n * @param {Event} mouseEvent\n */\nCastPlayer.prototype.setVolume = function (mouseEvent) {\n  var p = document.getElementById('audio_bg_level');\n  var pos = 0;\n  if (mouseEvent.currentTarget.id === 'audio_bg_track') {\n    pos = FULL_VOLUME_HEIGHT - parseInt(mouseEvent.offsetY, 10);\n  } else {\n    pos = parseInt(p.clientHeight, 10) - parseInt(mouseEvent.offsetY, 10);\n  }\n  this.playerHandler.setVolume(pos);\n};\n\n/**\n * Starts the timer to increment the media progress bar\n */\nCastPlayer.prototype.startProgressTimer = function () {\n  this.stopProgressTimer();\n\n  // Start progress timer\n  this.timer = setInterval(this.incrementMediaTimeHandler, TIMER_STEP);\n};\n\n/**\n * Stops the timer to increment the media progress bar\n */\nCastPlayer.prototype.stopProgressTimer = function () {\n  if (this.timer) {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n};\n\n/**\n * Increment media current time depending on remote or local playback\n */\nCastPlayer.prototype.incrementMediaTime = function () {\n  // First sync with the current player's time\n  this.currentMediaTime = this.playerHandler.getCurrentMediaTime();\n  this.mediaDuration = this.playerHandler.getMediaDuration();\n\n  this.playerHandler.updateDurationDisplay();\n\n  if (this.mediaDuration == null || this.currentMediaTime < this.mediaDuration || this.isLiveContent) {\n    this.playerHandler.updateCurrentTimeDisplay();\n    this.updateProgressBarByTimer();\n  } else if (this.mediaDuration > 0) {\n    this.endPlayback();\n  }\n};\n\n/**\n * Update progress bar and currentTime based on timer\n */\nCastPlayer.prototype.updateProgressBarByTimer = function () {\n  var progressBar = document.getElementById('progress');\n  var pi = document.getElementById('progress_indicator');\n\n  // Live situation where the progress and duration is unknown.\n  if (this.mediaDuration == null) {\n    if (!this.isLiveContent) {\n      console.log('Error - Duration is not defined for a VOD stream.');\n    }\n\n    progressBar.style.width = '0px';\n    \n    let skip = document.getElementById('skip');\n    if (skip && skip.style && skip.style.display) {\n      skip.style.display = 'none';\n    }\n\n    pi.style.display = 'none';\n    \n    let seekable_window = document.getElementById('seekable_window');\n    if (seekable_window && seekable_window.style && seekable_window.style.width)\n      seekable_window.style.width = '0px';\n\n    let unseekable_overlay = document.getElementById('unseekable_overlay');\n    if (unseekable_overlay && unseekable_overlay.style && unseekable_overlay.style.width)\n      unseekable_overlay.style.width = '0px';\n\n    return;\n  } else {\n    pi.style.display = '';\n  }\n\n  if (isNaN(parseInt(progressBar.style.width, 10))) {\n    progressBar.style.width = '0px';\n  }\n\n  // Prevent indicator from exceeding the max width. Happens during\n  // short media when each progress step is large\n  var pp = Math.floor(PROGRESS_BAR_WIDTH * this.currentMediaTime / this.mediaDuration);\n  if (pp > PROGRESS_BAR_WIDTH) {\n    pp = PROGRESS_BAR_WIDTH;\n  } else if (pp < 0) {\n    pp = 0;\n  }\n\n  progressBar.style.width = pp + 'px';\n  pi.style.marginLeft = pp + 'px';\n\n  let seekable_window = document.getElementById('seekable_window');\n  let unseekable_overlay = document.getElementById('unseekable_overlay');\n  if (this.isLiveContent) {\n    if (this.liveSeekableRange) {\n      // Use the liveSeekableRange to draw the seekable and unseekable windows\n      let seekableMediaPosition = Math.max(this.mediaInfo.metadata.sectionStartTimeInMedia, this.liveSeekableRange.end) -\n        this.mediaInfo.metadata.sectionStartTimeInMedia;\n      let seekableWidth = Math.floor(PROGRESS_BAR_WIDTH * seekableMediaPosition / this.mediaDuration);\n      if (seekableWidth > PROGRESS_BAR_WIDTH) {\n        seekableWidth = PROGRESS_BAR_WIDTH;\n      } else if (seekableWidth < 0) {\n        seekableWidth = 0;\n      }\n      seekable_window.style.width = seekableWidth + 'px';\n\n      let unseekableMediaPosition = Math.max(this.mediaInfo.metadata.sectionStartTimeInMedia, this.liveSeekableRange.start) -\n        this.mediaInfo.metadata.sectionStartTimeInMedia;\n      let unseekableWidth = Math.floor(PROGRESS_BAR_WIDTH * unseekableMediaPosition / this.mediaDuration);\n      if (unseekableWidth > PROGRESS_BAR_WIDTH) {\n        unseekableWidth = PROGRESS_BAR_WIDTH;\n      } else if (unseekableWidth < 0) {\n        unseekableWidth = 0;\n      }\n      unseekable_overlay.style.width = unseekableWidth + 'px';\n    } else {\n      // Nothing is seekable if no liveSeekableRange\n      seekable_window.style.width = '0px';\n      unseekable_overlay.style.width = PROGRESS_BAR_WIDTH + 'px';\n    }\n  } else {\n    // Default to everything seekable\n    seekable_window.style.width = PROGRESS_BAR_WIDTH + 'px';\n    unseekable_overlay.style.width = '0px';\n  }\n\n  if (pp >= PROGRESS_BAR_WIDTH && !this.isLiveContent) {\n    this.endPlayback();\n  }\n};\n\n/**\n *  End playback. Called when media ends.\n */\nCastPlayer.prototype.endPlayback = function () {\n  this.currentMediaTime = 0;\n  this.stopProgressTimer();\n  this.playerState = PLAYER_STATE.IDLE;\n  this.playerHandler.updateDisplay();\n\n  let play = document.getElementById('play');\n  if (play && play.style && play.display)\n    play.style.display = 'block';\n\n  let pause = document.getElementById('pause');\n  if (pause && pause.style && pause.style.display)\n    pause.style.display = 'none';\n};\n\n/**\n * @param {?number} timestamp Linux timestamp\n * @return {?string} media time string. Null if time is invalid.\n */\nCastPlayer.prototype.getMediaTimeString = function (timestamp) {\n  if (timestamp == undefined || timestamp == null) {\n    return null;\n  }\n\n  let isNegative = false;\n  if (timestamp < 0) {\n    isNegative = true;\n    timestamp *= -1;\n  }\n\n  let hours = Math.floor(timestamp / 3600);\n  let minutes = Math.floor((timestamp - (hours * 3600)) / 60);\n  let seconds = Math.floor(timestamp - (hours * 3600) - (minutes * 60));\n\n  if (hours < 10) hours = '0' + hours;\n  if (minutes < 10) minutes = '0' + minutes;\n  if (seconds < 10) seconds = '0' + seconds;\n\n  return (isNegative ? '-' : '') + hours + ':' + minutes + ':' + seconds;\n};\n\n/**\n * @param {number} timestamp Linux timestamp\n * @return {?string} ClockTime string. Null if time is invalid.\n */\nCastPlayer.prototype.getClockTimeString = function (timestamp) {\n  if (!timestamp) return \"0:00:00\";\n\n  let date = new Date(timestamp * 1000);\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  let seconds = date.getSeconds();\n  let ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  // Hour '0' should be '12'\n  hours = hours ? hours : 12;\n  minutes = ('0' + minutes).slice(-2);\n  seconds = ('0' + seconds).slice(-2);\n  let clockTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n  return clockTime;\n};\n\n/**\n * Updates Ad markers in UI\n */\nCastPlayer.prototype.updateAdMarkers = function () {\n  let castSession = cast.framework.CastContext.getInstance().getCurrentSession();\n  if (!castSession) return;\n\n  let media = castSession.getMediaSession();\n  if (!media) return;\n\n  let mediaInfo = media.media;\n  if (!mediaInfo) return;\n\n  let breaks = mediaInfo.breaks;\n  let contentDuration = mediaInfo.duration;\n\n  if (!breaks) {\n    return;\n  }\n\n  for (var i = 0; i < breaks.length; i++) {\n    let adBreak = breaks[i];\n\n    // Server-side stitched Ads (embedded) are skipped when the position is beyond\n    // the duration, so they shouldn't be shown with an ad marker on the UI.\n    if (adBreak.position > contentDuration && adBreak.isEmbedded) {\n      continue;\n    }\n\n    // Place marker if not already set in position\n    if (!document.getElementById('ad' + adBreak.position)) {\n      var div = document.getElementById('progress')\n      div.innerHTML += '<div class=\"adMarker\" id=\"ad' + adBreak.position +\n        '\" style=\"margin-left: ' +\n        this.adPositionToMargin(adBreak.position, contentDuration) + 'px\"></div>';\n    }\n  }\n};\n\n/**\n * Remove Ad markers in UI\n */\nCastPlayer.prototype.removeAdMarkers = function () {\n  document.querySelectorAll('.adMarker').forEach(function (adMarker) {\n    adMarker.remove();\n  });\n};\n\n/**\n * Position of the ad marker from the margin\n */\nCastPlayer.prototype.adPositionToMargin = function (position, contentDuration) {\n  // Post-roll\n  if (position == -1) {\n    return PROGRESS_BAR_WIDTH;\n  }\n\n  // Client stitched Ads (not embedded) beyond the duration, will play at the\n  // end of the content.\n  if (position > contentDuration) {\n    return PROGRESS_BAR_WIDTH;\n  }\n\n  // Convert Ad position to margin\n  return (PROGRESS_BAR_WIDTH * position) / contentDuration;\n};\n\n/**\n * Handle BREAK_CLIP_ID_CHANGED event\n */\nCastPlayer.prototype.onBreakClipIdChanged = function () {\n  // Hide skip button when switching to a new breakClip\n  let skip = document.getElementById('skip');\n  if (skip && skip.style && skip.style.display)\n    skip.style.display = 'none';\n};\n\n/**\n * Disable progress bar if playing a break.\n */\nCastPlayer.prototype.isPlayingBreak = function (isPlayingBreak) {\n  this.enableProgressBar(!isPlayingBreak);\n};\n\n/**\n * Handle WHEN_SKIPPABLE_CHANGED event\n */\nCastPlayer.prototype.onWhenSkippableChanged = function (whenSkippable) {\n  this.whenSkippable = whenSkippable;\n};\n\n/**\n * Handle CURRENT_BREAK_CLIP_TIME_CHANGED event\n */\nCastPlayer.prototype.onCurrentBreakClipTimeChanged = function (currentBreakClipTime) {\n  let skip = document.getElementById('skip');\n\n  // Unskippable\n  if (this.whenSkippable == undefined || this.whenSkippable < 0) {\n    // Hide skip button    \n    if (skip && skip.style && skip.style.display)\n      skip.style.display = 'none';\n  }\n  // Skippable\n  else if (this.whenSkippable !== undefined || currentBreakClipTime >= this.whenSkippable) {\n    // Show skip button    \n    if (skip && skip.style && skip.style.display)\n      skip.style.display = 'block';\n  }\n  // Not ready to be skipped\n  else {\n    // Hide skip button\n    if (skip && skip.style && skip.style.display)\n      skip.style.display = 'none';\n  }\n};\n\n/**\n * Skip the current Ad\n */\nCastPlayer.prototype.skipAd = function () {\n  this.remotePlayerController.skipAd();\n}\n\n/**\n * Enable/disable progress bar\n */\nCastPlayer.prototype.enableProgressBar = function (enable) {\n  let progress = document.getElementById('progress');\n  let progress_indicator = document.getElementById('progress_indicator');\n  let seekable_window = document.getElementById('seekable_window');\n\n  if (enable) {\n    // Enable UI\n    progress.style.backgroundImage = \"url('./assets/imagefiles/timeline_bg_progress.png')\";\n    progress.style.cursor = \"pointer\";\n    seekable_window.style.cursor = \"pointer\";\n    progress_indicator.style.cursor = \"pointer\";\n    progress_indicator.draggable = true;\n\n    // Add listeners\n    progress.addEventListener('click', this.seekMediaListener);\n    seekable_window.addEventListener('click', this.seekMediaListener);\n    progress_indicator.addEventListener('dragend', this.seekMediaListener);\n  } else {\n    // Disable UI\n    progress.style.backgroundImage = \"url('./assets/imagefiles/timeline_bg_buffer.png')\";\n    progress.style.cursor = \"default\";\n    seekable_window.style.cursor = \"default\";\n    progress_indicator.style.cursor = \"default\";\n    progress_indicator.draggable = false;\n\n    // Remove listeners\n    progress.removeEventListener('click', this.seekMediaListener);\n    seekable_window.removeEventListener('click', this.seekMediaListener);\n    progress_indicator.removeEventListener('dragend', this.seekMediaListener);\n  }\n}\n\n/**\n * Request full screen mode\n */\nCastPlayer.prototype.requestFullScreen = function () {\n  // Supports most browsers and their versions\n  var element = document.getElementById('video_element');\n  var requestMethod =\n    element['requestFullScreen'] || element['webkitRequestFullScreen'];\n\n  if (requestMethod) {\n    // Native full screen.\n    requestMethod.call(element);\n    console.log('Requested fullscreen');\n  }\n};\n\n/**\n * Exit full screen mode\n */\nCastPlayer.prototype.cancelFullScreen = function () {\n  // Supports most browsers and their versions.\n  var requestMethod =\n    document['cancelFullScreen'] || document['webkitCancelFullScreen'];\n\n  if (requestMethod) {\n    requestMethod.call(document);\n  }\n};\n\n/**\n * Exit fullscreen mode by escape\n */\nCastPlayer.prototype.fullscreenChangeHandler = function () {\n  this.fullscreen = !this.fullscreen;\n};\n\n/**\n * Show expand/collapse fullscreen button\n */\nCastPlayer.prototype.showFullscreenButton = function () {\n  let fullscreen_expand = document.getElementById('fullscreen_expand');\n  let fullscreen_collapse = document.getElementById('fullscreen_collapse');\n\n  if (this.fullscreen) {\n    if (fullscreen_expand && fullscreen_expand.style && fullscreen_expand.style.display)\n      fullscreen_expand.style.display = 'none';\n\n    if (fullscreen_collapse && fullscreen_collapse.style && fullscreen_collapse.style.display)\n      fullscreen_collapse.style.display = 'block';      \n  } else {\n    if (fullscreen_expand && fullscreen_expand.style && fullscreen_expand.style.display)\n      fullscreen_expand.style.display = 'block';\n\n    if (fullscreen_collapse && fullscreen_collapse.style && fullscreen_collapse.style.display)\n      fullscreen_collapse.style.display = 'none';\n  }\n};\n\n/**\n * Hide expand/collapse fullscreen button\n */\nCastPlayer.prototype.hideFullscreenButton = function () {\n  let fullscreen_expand = document.getElementById('fullscreen_expand');\n  let fullscreen_collapse = document.getElementById('fullscreen_collapse');\n\n  if (fullscreen_expand && fullscreen_expand.style && fullscreen_expand.style.display)\n      fullscreen_expand.style.display = 'none';\n\n  if (fullscreen_collapse && fullscreen_collapse.style && fullscreen_collapse.style.display)\n      fullscreen_collapse.style.display = 'none';\n};\n\n/**\n * Show the media control\n */\nCastPlayer.prototype.showMediaControl = function () {\n  let media_control = document.getElementById('media_control');\n  if (media_control && media_control.style && media_control.opacity)\n    media_control.style.opacity = 0.7;\n};\n\n/**\n * Hide the media control\n */\nCastPlayer.prototype.hideMediaControl = function () {\n  if (typeof cast !== 'undefined') {\n    let context = cast.framework.CastContext.getInstance();\n    if (context && context.getCurrentSession()) {\n      // Do not hide controls during an active cast session.\n      document.getElementById('media_control').style.opacity = 0.7;\n    } else {\n      document.getElementById('media_control').style.opacity = 0;\n    }\n  }\n};\n\n/**\n * Show the volume slider\n */\nCastPlayer.prototype.showVolumeSlider = function () {\n  if (!this.playerHandler.isMuted()) {\n    document.getElementById('audio_bg').style.opacity = 1;\n    document.getElementById('audio_bg_track').style.opacity = 1;\n    document.getElementById('audio_bg_level').style.opacity = 1;\n    document.getElementById('audio_indicator').style.opacity = 1;\n  }\n};\n\n/**\n * Hide the volume slider\n */\nCastPlayer.prototype.hideVolumeSlider = function () {\n  document.getElementById('audio_bg').style.opacity = 0;\n  document.getElementById('audio_bg_track').style.opacity = 0;\n  document.getElementById('audio_bg_level').style.opacity = 0;\n  document.getElementById('audio_indicator').style.opacity = 0;\n};\n\n/**\n * Reset the volume slider\n */\nCastPlayer.prototype.resetVolumeSlider = function () {\n  var volumeTrackHeight = document.getElementById('audio_bg_track').clientHeight;\n  var defaultVolumeSliderHeight = DEFAULT_VOLUME * volumeTrackHeight;\n  document.getElementById('audio_bg_level').style.height =\n    defaultVolumeSliderHeight + 'px';\n  document.getElementById('audio_on').style.display = 'block';\n  document.getElementById('audio_off').style.display = 'none';\n};\n\n/**\n * Initialize UI components and add event listeners\n */\nCastPlayer.prototype.initializeUI = function () {\n  // Set initial values for title and subtitle.\n  if (this.mediaContents && this.mediaContents.length > 0) {\n    document.getElementById('media_title').innerHTML =\n      this.mediaContents[0]['title'];\n\n    document.getElementById('media_subtitle').innerHTML =\n      this.mediaContents[this.currentMediaIndex]['subtitle'];\n  }\n\n  document.getElementById('seekable_window').addEventListener(\n    'click', this.seekMediaListener);\n  document.getElementById('progress').addEventListener(\n    'click', this.seekMediaListener);\n  document.getElementById('progress_indicator').addEventListener(\n    'dragend', this.seekMediaListener);\n  document.getElementById('skip').addEventListener(\n    'click', this.skipAd.bind(this));\n  document.getElementById('audio_on').addEventListener(\n    'click', this.playerHandler.mute.bind(this.playerHandler));\n  document.getElementById('audio_off').addEventListener(\n    'click', this.playerHandler.unMute.bind(this.playerHandler));\n  document.getElementById('audio_bg').addEventListener(\n    'mouseover', this.showVolumeSlider.bind(this));\n  document.getElementById('audio_on').addEventListener(\n    'mouseover', this.showVolumeSlider.bind(this));\n  document.getElementById('audio_bg_level').addEventListener(\n    'mouseover', this.showVolumeSlider.bind(this));\n  document.getElementById('audio_bg_track').addEventListener(\n    'mouseover', this.showVolumeSlider.bind(this));\n  document.getElementById('audio_bg_level').addEventListener(\n    'click', this.setVolume.bind(this));\n  document.getElementById('audio_bg_track').addEventListener(\n    'click', this.setVolume.bind(this));\n  document.getElementById('audio_bg').addEventListener(\n    'mouseout', this.hideVolumeSlider.bind(this));\n  document.getElementById('audio_on').addEventListener(\n    'mouseout', this.hideVolumeSlider.bind(this));\n\n  let main_video = document.getElementById('main_video');\n  if (typeof main_video !== 'undefined' && main_video) {\n    main_video.addEventListener(\n      'mouseover', this.showMediaControl.bind(this));\n    main_video.addEventListener(\n      'mouseout', this.hideMediaControl.bind(this));\n  }\n  \n  document.getElementById('media_control').addEventListener(\n    'mouseover', this.showMediaControl.bind(this));\n  document.getElementById('media_control').addEventListener(\n    'mouseout', this.hideMediaControl.bind(this));\n  document.getElementById('fullscreen_expand').addEventListener(\n    'click', this.requestFullScreen.bind(this));\n  document.getElementById('fullscreen_collapse').addEventListener(\n    'click', this.cancelFullScreen.bind(this));\n  document.addEventListener(\n    'fullscreenchange', this.fullscreenChangeHandler.bind(this), false);\n  document.addEventListener(\n    'webkitfullscreenchange', this.fullscreenChangeHandler.bind(this), false);\n\n  // Enable play/pause buttons\n  document.getElementById('play').addEventListener(\n    'click', this.playerHandler.play.bind(this.playerHandler));\n  document.getElementById('pause').addEventListener(\n    'click', this.playerHandler.pause.bind(this.playerHandler));\n\n  document.getElementById('progress_indicator').draggable = true;\n\n  // Set up feature radio buttons\n  let noneRadio = document.getElementById('none');\n  noneRadio.onclick = function () {\n    ENABLE_LIVE = false;\n    ENABLE_ADS = false;\n    console.log(\"Features have been removed\");\n  }\n  let adsRadio = document.getElementById('ads');\n  adsRadio.onclick = function () {\n    ENABLE_LIVE = false;\n    ENABLE_ADS = true;\n    console.log(\"Ads have been enabled\");\n  }\n  let liveRadio = document.getElementById('live');\n  liveRadio.onclick = function () {\n    ENABLE_LIVE = true;\n    ENABLE_ADS = false;\n    console.log(\"Live has been enabled\");\n  }\n\n  if (ENABLE_ADS) {\n    if (ENABLE_LIVE) {\n      console.error('Only one feature can be enabled at a time. Enabling ads.');\n    }\n    adsRadio.checked = true;\n    console.log(\"Ads are enabled\");\n  } else if (ENABLE_LIVE) {\n    liveRadio.checked = true;\n    console.log(\"Live is enabled\");\n  } else {\n    noneRadio.checked = true;\n    console.log(\"No features are enabled\");\n  }\n};\n\n/**\n * Add video thumbnails div's to UI for media JSON contents\n */\nCastPlayer.prototype.addVideoThumbs = function () {\n  if (typeof this.mediaJSON !== 'undefined' && this.mediaJSON['categories'] && this.mediaJSON['categories'].length > 0) {\n    this.mediaContents = this.mediaJSON['categories'][0]['videos'];\n    var ni = document.getElementById('carousel');\n    var newdiv = null;\n    var divIdName = null;\n    for (var i = 0; i < this.mediaContents.length; i++) {\n      newdiv = document.createElement('div');\n      divIdName = 'thumb' + i + 'Div';\n      newdiv.setAttribute('id', divIdName);\n      newdiv.setAttribute('class', 'thumb');\n      newdiv.innerHTML =\n        '<img src=\"' + MEDIA_SOURCE_ROOT + this.mediaContents[i]['thumb'] +\n        '\" class=\"thumbnail\">';\n      newdiv.addEventListener('click', this.selectMedia.bind(this, i));\n      ni.appendChild(newdiv);\n    }\n  }\n};\n\n/**\n * Makes human-readable message from chrome.cast.Error\n * @param {chrome.cast.Error} error\n * @return {string} error message\n */\nCastPlayer.getErrorMessage = function (error) {\n  switch (error.code) {\n    case chrome.cast.ErrorCode.API_NOT_INITIALIZED:\n      return 'The API is not initialized.' +\n        (error.description ? ' :' + error.description : '');\n    case chrome.cast.ErrorCode.CANCEL:\n      return 'The operation was canceled by the user' +\n        (error.description ? ' :' + error.description : '');\n    case chrome.cast.ErrorCode.CHANNEL_ERROR:\n      return 'A channel to the receiver is not available.' +\n        (error.description ? ' :' + error.description : '');\n    case chrome.cast.ErrorCode.EXTENSION_MISSING:\n      return 'The Cast extension is not available.' +\n        (error.description ? ' :' + error.description : '');\n    case chrome.cast.ErrorCode.INVALID_PARAMETER:\n      return 'The parameters to the operation were not valid.' +\n        (error.description ? ' :' + error.description : '');\n    case chrome.cast.ErrorCode.RECEIVER_UNAVAILABLE:\n      return 'No receiver was compatible with the session request.' +\n        (error.description ? ' :' + error.description : '');\n    case chrome.cast.ErrorCode.SESSION_ERROR:\n      return 'A session could not be created, or a session was invalid.' +\n        (error.description ? ' :' + error.description : '');\n    case chrome.cast.ErrorCode.TIMEOUT:\n      return 'The operation timed out.' +\n        (error.description ? ' :' + error.description : '');\n    default:\n      return error;\n  }\n};\n\nvar castPlayer = new CastPlayer();\nwindow['__onGCastApiAvailable'] = function (isAvailable) {\n  if (isAvailable) {\n    castPlayer.initializeCastPlayer();\n  }\n};\n\nwindow.CastPlayer = castPlayer;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgCastService } from './shared/ng-cast.service';\n\n@Component({\n  selector: 'ng-cast',\n  templateUrl: './ng-cast.component.html',\n  styleUrls: [\n    './ng-cast.component.scss'\n  ]\n})\nexport class NgCastComponent implements OnInit {\n  castingStatus: any;\n  window: any;\n\n  constructor(\n    private ngCastService: NgCastService\n  ) { }\n\n  ngOnInit() {\n    this.window = window;\n\n    let ngCastService = this.ngCastService;\n    this.window['__onGCastApiAvailable'] = function (isAvailable: boolean) {\n      if (isAvailable) {\n        ngCastService.initializeCastApi();\n      }\n    };\n\n    this.castingStatus = this.ngCastService.getStatus();\n  }\n\n  openSession() {\n    this.ngCastService.discoverDevices();\n  }\n\n  closeSession() {\n    this.ngCastService.discoverDevices();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\ndeclare global {\n  var CastPlayer: any;\n}\n\n@Injectable()\nexport class NgCastService {\n  private cast: any;\n  private currentMedia: any;\n  private window: any = window;\n\n  public status = {\n    casting: false\n  };\n\n  constructor() {\n    globalThis.CastPlayer.mediaJSON = {\n      categories: []\n    };\n  }\n\n  initializeCastApi() {\n    this.cast = this.window['chrome'].cast;\n    let sessionRequest = new this.cast.SessionRequest(this.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID);\n    let apiConfig = new this.cast.ApiConfig(sessionRequest,\n      () => { },\n      (status: any) => { if (status === this.cast.ReceiverAvailability.AVAILABLE) { } }\n    );\n    let x = this.cast.initialize(apiConfig, this.onInitSuccess, this.onError);\n  };\n\n  onInitSuccess = function () {\n    console.log('GCast initialization success');\n  };\n\n  onError = function (err: any) {\n    console.log('GCast initialization failed', err);\n  };\n\n  discoverDevices = () => {\n    let self: any = this;\n    let subj = new Subject();\n    this.cast.requestSession((s: any) => {\n      self.session = s;\n      self.setCasting(true);\n      subj.next('CONNECTED');\n    }, function (err: any) {\n      self.setCasting(false);\n      if (err.code === 'cancel') {\n        self.session = undefined;\n        subj.next('CANCEL');\n      } else {\n        console.error('Error selecting a cast device', err);\n      }\n    });\n    return subj;\n  };\n\n  onMediaDiscovered = (categories: any[]) => {\n    let script = window['document'].createElement('script');\n    script.setAttribute('type', 'text/javascript');\n    script.setAttribute('src', 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1');\n    window['document'].body.appendChild(script);\n\n    globalThis.CastPlayer.mediaJSON.categories = categories;\n  };\n\n  play = () => {    \n    this.currentMedia.play(null);\n  };\n\n  pause = () => {\n    this.currentMedia.pause(null);\n  };\n\n  stop = () => {\n    this.currentMedia.stop(null);\n  };\n\n  onMediaError = (err: any) => {\n    console.error('Error launching media', err);\n  };\n\n  setCasting(value: any) {\n    globalThis.CastPlayer.addVideoThumbs();\n    this.status.casting = value;\n  }\n\n  getStatus() {\n    return this.status\n  }\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgCastComponent } from './ng-cast.component';\nimport { NgCastService } from './shared/ng-cast.service';\n\n\n@NgModule({\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgCastComponent],\n  providers: [NgCastService],\n  declarations: [NgCastComponent]\n})\nexport class NgCastModule { }\n"]}